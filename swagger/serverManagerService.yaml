openapi: 3.0.0
info:
  title: Server Manager Service
  description: |-
    Define and control your servers with these routes.
  version: 0.1.0
externalDocs:
  description: GitHub
  url: https://github.com/Zane-T-Rice/server-manager-service
tags:
  - name: hosts
    description: The Hosts where Servers live
  - name: servers
    description: The root of managing and configuring your Servers
  - name: ports
    description: Manage a Server's Ports
  - name: volumes
    description: Manage a Server's Volumes
  - name: environmentVariables
    description: Manage a Server's EnvironmentVariables
  - name: files
    description: Manage a Server's build Files
servers:
  - url: /server-manager-service
  - url: /
paths:
  /hosts:
    post:
      tags:
        - hosts
      summary: Create a new host
      operationId: createhost
      requestBody:
        $ref: "./hosts/hostCreateRequest.yaml"
      responses:
        "200":
          $ref: "./hosts/hostResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - hosts
      summary: Get hosts of Server
      operationId: gethosts
      responses:
        "200":
          $ref: "./hosts/hostArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./hosts/errors/hostNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}:
    get:
      tags:
        - hosts
      summary: Get a host by id
      operationId: gethost
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
      responses:
        "200":
          $ref: "./hosts/hostResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./hosts/errors/hostNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - hosts
      summary: Update a host by id
      operationId: patchhost
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
      requestBody:
        $ref: "./hosts/hostPatchRequest.yaml"
      responses:
        "200":
          $ref: "./hosts/hostResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./hosts/errors/hostNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - hosts
      summary: Delete a host by id
      operationId: deletehost
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
      responses:
        "200":
          $ref: "./hosts/hostResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./hosts/errors/hostNotFoundError.yaml"
  /hosts/{hostId}/servers:
    post:
      tags:
        - servers
      summary: Create a new Server
      operationId: createServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
      requestBody:
        $ref: "./servers/serverCreateRequest.yaml"
      responses:
        "200":
          $ref: "./servers/serverResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - servers
      summary: Get all Servers
      operationId: getServers
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - in: query
          name: isUpdatable
          schema:
            type: boolean
          description: filter results based on if a Server is updatable or not
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}:
    get:
      tags:
        - servers
      summary: Get a Server by id
      operationId: getServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - servers
      summary: Patch a Server by id
      operationId: patchServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./servers/serverPatchRequest.yaml"
      responses:
        "200":
          $ref: "./servers/serverResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - servers
      summary: Delete a Server by id
      operationId: deleteServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/start:
    post:
      tags:
        - servers
      summary: Start a Server by id
      operationId: startServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/stop:
    post:
      tags:
        - servers
      summary: Stop a Server by id
      operationId: stopServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/update:
    post:
      tags:
        - servers
      summary: Update a Server by id
      description: This is for rebuilding containers to bring them fully up to date. If you are trying to patch the configuration of a Server, use the PATCH /servers/{serverId} route instead.
      operationId: updateServer
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/users:
    post:
      tags:
        - userServerLinks
      summary: Create a UserServerLink between a Server by id and a User by username
      operationId: createUserServerLink
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./userServerLinks/userServerLinkCreateRequest.yaml"
      responses:
        "200":
          $ref: "./userServerLinks/userServerLinkResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          description: "The Server could not be found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "./servers/errors/serverNotFoundErrorSchema.yaml"
                  - $ref: "./hosts/errors/hostNotFoundErrorSchema.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - userServerLinks
      summary: Get all UserServerLinks for the Server by id
      operationId: getUserServerLinks
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./userServerLinks/userServerLinkArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          description: "The Server could not be found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "./servers/errors/serverNotFoundErrorSchema.yaml"
                  - $ref: "./hosts/errors/hostNotFoundErrorSchema.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/users/{userId}:
    delete:
      tags:
        - userServerLinks
      summary: Delete the UserServerLink by id
      operationId: deleteUserServerLink
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/userIdInPath.yaml"
      responses:
        "200":
          $ref: "./userServerLinks/userServerLinkResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          description: "The Server could not be found."
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "./servers/errors/serverNotFoundErrorSchema.yaml"
                  - $ref: "./hosts/errors/hostNotFoundErrorSchema.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/ports:
    post:
      tags:
        - ports
      summary: Create a new port
      operationId: createPort
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./ports/portCreateRequest.yaml"
      responses:
        "200":
          $ref: "./ports/portResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - ports
      summary: Get Ports of Server
      operationId: getPorts
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./ports/portArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./ports/errors/portNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/ports/{portId}:
    get:
      tags:
        - ports
      summary: Get a Port by id
      operationId: getPort
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/portIdInPath.yaml"
      responses:
        "200":
          $ref: "./ports/portResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./ports/errors/portNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - ports
      summary: Update a Port by id
      operationId: patchPort
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/portIdInPath.yaml"
      requestBody:
        $ref: "./ports/portPatchRequest.yaml"
      responses:
        "200":
          $ref: "./ports/portResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./ports/errors/portNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - ports
      summary: Delete a port by id
      operationId: deletePort
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/portIdInPath.yaml"
      responses:
        "200":
          $ref: "./ports/portResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./ports/errors/portNotFoundError.yaml"
  /hosts/{hostId}/servers/{serverId}/volumes:
    post:
      tags:
        - volumes
      summary: Create a new volume
      operationId: createVolume
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./volumes/volumeCreateRequest.yaml"
      responses:
        "200":
          $ref: "./volumes/volumeResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - volumes
      summary: Get Volumes of Server
      operationId: getVolumes
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./volumes/volumeArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./volumes/errors/volumeNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/volumes/{volumeId}:
    get:
      tags:
        - volumes
      summary: Get a Volume by id
      operationId: getVolume
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/volumeIdInPath.yaml"
      responses:
        "200":
          $ref: "./volumes/volumeResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./volumes/errors/volumeNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - volumes
      summary: Update a Volume by id
      operationId: patchVolume
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/volumeIdInPath.yaml"
      requestBody:
        $ref: "./volumes/volumePatchRequest.yaml"
      responses:
        "200":
          $ref: "./volumes/volumeResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./volumes/errors/volumeNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - volumes
      summary: Delete a Volume by id
      operationId: deleteVolume
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/volumeIdInPath.yaml"
      responses:
        "200":
          $ref: "./volumes/volumeResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./volumes/errors/volumeNotFoundError.yaml"
  /hosts/{hostId}/servers/{serverId}/environmentVariables:
    post:
      tags:
        - environmentVariables
      summary: Create a new environmentVariable
      operationId: createEnvironmentVariable
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./environmentVariables/environmentVariableCreateRequest.yaml"
      responses:
        "200":
          $ref: "./environmentVariables/environmentVariableResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - environmentVariables
      summary: Get EnvironmentVariables of Server
      operationId: getEnvironmentVariables
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./environmentVariables/environmentVariableArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./environmentVariables/errors/environmentVariableNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/environmentVariables/{environmentVariableId}:
    get:
      tags:
        - environmentVariables
      summary: Get an EnvironmentVariable by id
      operationId: getEnvironmentVariable
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/environmentVariableIdInPath.yaml"
      responses:
        "200":
          $ref: "./environmentVariables/environmentVariableResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./environmentVariables/errors/environmentVariableNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - environmentVariables
      summary: Update an EnvironmentVariable by id
      operationId: patchEnvironmentVariable
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/environmentVariableIdInPath.yaml"
      requestBody:
        $ref: "./environmentVariables/environmentVariablePatchRequest.yaml"
      responses:
        "200":
          $ref: "./environmentVariables/environmentVariableResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./environmentVariables/errors/environmentVariableNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - environmentVariables
      summary: Delete an EnvironmentVariable by id
      operationId: deleteEnvironmentVariable
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/environmentVariableIdInPath.yaml"
      responses:
        "200":
          $ref: "./environmentVariables/environmentVariableResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./environmentVariables/errors/environmentVariableNotFoundError.yaml"
  /hosts/{hostId}/servers/{serverId}/files:
    post:
      tags:
        - files
      summary: Create a new file
      description: This takes a base64 encoded file. An easy way to base64 encode a file with node is Buffer.from(fs.readFileSync('filename').toString()).toString('base64').
      operationId: createFile
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      requestBody:
        $ref: "./files/fileCreateRequest.yaml"
      responses:
        "200":
          $ref: "./files/fileResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    get:
      tags:
        - files
      summary: Get Files of Server
      operationId: getFiles
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./files/fileArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./files/errors/fileNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /hosts/{hostId}/servers/{serverId}/files/{fileId}:
    get:
      tags:
        - files
      summary: Get a File by id
      operationId: getFile
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/fileIdInPath.yaml"
      responses:
        "200":
          $ref: "./files/fileResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./files/errors/fileNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    patch:
      tags:
        - files
      summary: Update a File by id
      operationId: patchFile
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/fileIdInPath.yaml"
      requestBody:
        $ref: "./files/filePatchRequest.yaml"
      responses:
        "200":
          $ref: "./files/fileResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./files/errors/fileNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
    delete:
      tags:
        - files
      summary: Delete a File by id
      operationId: deleteFile
      parameters:
        - $ref: "./common/hostIdInPath.yaml"
        - $ref: "./common/serverIdInPath.yaml"
        - $ref: "./common/fileIdInPath.yaml"
      responses:
        "200":
          $ref: "./files/fileResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./files/errors/fileNotFoundError.yaml"
  /users/servers:
    get:
      tags:
        - userServers
      summary: Get all Servers For This User
      operationId: getUserServers
      parameters:
        - in: query
          name: isUpdatable
          schema:
            type: boolean
          description: filter results based on if a Server is updatable or not
      responses:
        "200":
          $ref: "./userServers/userServerArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /users/servers/{serverId}:
    get:
      tags:
        - userServers
      summary: Get a Server owned by this User by id
      operationId: getUserServer
      parameters:
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./userServers/userServerResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /users/servers/{serverId}/start:
    post:
      tags:
        - userServers
      summary: Start a Server owned by this user by id
      operationId: startUserServer
      parameters:
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /users/servers/{serverId}/stop:
    post:
      tags:
        - userServers
      summary: Stop a Server owned by this user by id
      operationId: stopUserServer
      parameters:
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
  /users/servers/{serverId}/update:
    post:
      tags:
        - userServers
      summary: Update a Server owned by this user by id
      description: This is for rebuilding containers to bring them fully up to date. If you are trying to patch the configuration of a Server, use the PATCH /servers/{serverId} route instead.
      operationId: updateUserServer
      parameters:
        - $ref: "./common/serverIdInPath.yaml"
      responses:
        "200":
          $ref: "./servers/serverArrayResponse.yaml"
        "401":
          $ref: "./common/errors/notAuthorizedError.yaml"
        "404":
          $ref: "./servers/errors/serverNotFoundError.yaml"
        "500":
          $ref: "./common/errors/internalServerError.yaml"
components:
  securitySchemes:
    ApiBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
# Apply the ApiBearerAuth globally to all operations
security:
  - ApiBearerAuth: []
