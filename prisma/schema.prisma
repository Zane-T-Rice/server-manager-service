// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url = env("DATABASE_URL")
}

model Server {
  id String @id @default(uuid())
  applicationName String
  containerName String
  isUpdatable Boolean @default(false)
  ports Port[]
  volumes Volume[]
  environmentVariables EnvironmentVariable[]
  files File[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Port {
  id String @id @default(uuid())
  serverId String // FK of server which owns this record.
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  number Int
  protocol String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Volume {
  id String @id @default(uuid())
  serverId String // FK of server which owns this record.
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  hostPath String
  containerPath String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EnvironmentVariable {
  id String @id @default(uuid())
  serverId String // FK of server which owns this record.
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  name String
  value String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model File {
  id String @id @default(uuid())
  serverId String // FK of server which owns this record.
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)
  name String // The name of the file.
  content String // The content of the file as a plain string.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}